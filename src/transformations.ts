export interface TransformationsRule {
	findRegex:RegExp;
	replaceWith:string;
}

export const rules:TransformationsRule[] = [
	{
		findRegex:/[aouieywhr]+/g,
		replaceWith:""
	},
	{
		findRegex:/(ph|gh|ch|sh|ti|s|c|v|f|nk|kn|op|po|t|ite|n|'|ly)/g,
		replaceWith:""
	},
	{
		findRegex:/(.)(?=.*\1)/g,
		replaceWith:""
	},
	{
		findRegex:/\W/g,
		replaceWith:""
	},
	{
		findRegex:/...$/,
		replaceWith:""
	},
	{
		findRegex:/..$/,
		replaceWith:""
	},
	{
		findRegex:/.$/,
		replaceWith:""
	},
	{
		findRegex:/(..)(....)$/,
		replaceWith:"$1"
	},
	{
		findRegex:/(...)(.....)$/,
		replaceWith:"$1"
	},
	{
		findRegex:/^.../,
		replaceWith:""
	},
	{
		findRegex:/^../,
		replaceWith:""
	},
	{
		findRegex:/^./,
		replaceWith:""
	},
	{
		findRegex:/[sz]/g,
		replaceWith:""
	},
	{
		findRegex:/[our]/g,
		replaceWith:""
	},
	{
		findRegex:/[^aouieywhr]/,
		replaceWith:""
	},
	{
		findRegex:/[^aouieywhr][^aouieywhr]/,
		replaceWith:""
	},
	{
		findRegex:/[^aouieywhr][^aouieywhr][^aouieywhr]/,
		replaceWith:""
	},
	{
		findRegex:/[aouieywhr][^aouieywhr]/g,
		replaceWith:""
	},
	{
		findRegex:/(le|ed|cs|ing|er|ish|il|ly|g|tion)$/,
		replaceWith:""
	},
	{
		findRegex:/[asd]/g,
		replaceWith:""
	},
	{
		findRegex:/[rtyu]/g,
		replaceWith:""
	},
	{
		findRegex:/[iop]/g,
		replaceWith:""
	},
	{
		findRegex:/[fghjkl]/g,
		replaceWith:""
	},
	{
		findRegex:/[plmokn]/g,
		replaceWith:""
	},
	{
		findRegex:/[ijbuhgv]/g,
		replaceWith:""
	},
	{
		findRegex:/[cguytfdxr]/g,
		replaceWith:""
	},
	{
		findRegex:/[qazxswedcrfv]/g,
		replaceWith:""
	},
	{
		findRegex:/iti/g,
		replaceWith:"i"
	},
	{
		findRegex:/[bp]/g,
		replaceWith:""
	},
];

export default rules;